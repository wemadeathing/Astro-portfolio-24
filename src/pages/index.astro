---
import Layout from '../layouts/Layout.astro';
import ProjectCard from '../components/ProjectCard.astro';
import HeroAnimation from '../components/HeroAnimation.astro';
import { getCollection } from 'astro:content';
import portfolioGrid from '../images/nasif-portfolio-grid.png';

const projects = await getCollection('projects');
const featuredProjects = projects.filter(project => project.data.featured);


---

<Layout title="Nasif Salaam | Product Designer · Digital Innovation">
  <div class="absolute inset-0 h-screen bg-gradient-hero after:absolute after:inset-0 after:bg-gradient-to-b after:from-transparent after:to-black after:opacity-90 -z-10"></div>
  <HeroAnimation />
  <section class="relative min-h-[100vh] flex items-center pt-16 sm:pt-20">
    <div class="container max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="max-w-4xl">
        
        <h1 class="text-4xl sm:text-6xl md:text-6xl lg:text-7xl font-bold mb-6 text-foreground leading-tight sm:leading-tight md:leading-tight lg:leading-tight">
          <span id="changing-role">Product Designer</span><br>
          with 15+ Years of Design Expertise.
        </h1>
        <p class="text-xl sm:text-2xl text-muted-foreground mb-10 max-w-3xl leading-relaxed">
          I design and build ideas into working products, fast. Seasoned designer who now functional prototypes to help businesses validate concepts quickly. From design to development, I can help you get your idea from concept to working product.
        </p>
        <div class="flex gap-4">
          
        </div>
      </div>
    </div>
  </section>

  <div class="w-full" >
    <img 
      src={portfolioGrid.src}
      alt="Portfolio Grid" 
      class="w-full object-cover"
    />
  </div>

  <section class="bg-background">
    <div class="container max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-40 pb-24">
      <h2 class="text-4xl font-bold mb-4 text-foreground">I Design and Build in Parallel</h2>
      <p class="text-lg text-muted-foreground mb-8 max-w-2xl">
        My approach is grounded in solid design thinking and strategic frameworks, planning and user research. Now I augment these skills with AI and modern development tools, allowing me to design while I build. This lets me make informed design decisions and iterations during development that most coders can't - maintaining strategic design quality while moving fast.
      </p>
      <p class="text-lg text-muted-foreground mb-8 max-w-2xl">
        Whether you need to validate a business idea, build a functional prototype, or create a solution that actually works, I can help you get there efficiently. I've integrated AI APIs, authentication systems, email integrations, MCPs, and databases into working applications that solve real problems.
      </p>
      <p class="text-lg text-muted-foreground mb-8 max-w-2xl">
        My unique advantage is combining years of design expertise with rapid building capabilities. I understand both user experience and technical implementation, which means better design decisions and faster iterations.
      </p>
      
    </div>
  </section>

  <section class="bg-background">
    <div class="container max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pt-40 pb-24">
      <h2 class="text-4xl font-bold mb-4 text-foreground">Let's Build Something That Works</h2>
      <p class="text-lg text-muted-foreground mb-8 max-w-2xl">
        Looking for rapid prototyping or functional builds without months of planning? I help solo founders and businesses turn ideas into working products quickly. If you need something built fast with design quality, let's talk.
      </p>
      <a
        href="/contact"
        class="inline-flex h-12 items-center justify-center rounded-full bg-white px-8 text-sm font-medium text-black transition-colors hover:bg-white/90"
      >
        Let's Build →
      </a>
    </div>
  </section>
  <elevenlabs-convai agent-id="VAtr4lyC76FjdLqbj3kt"></elevenlabs-convai><script src="https://elevenlabs.io/convai-widget/index.js" async type="text/javascript"></script>

  <!-- Then update your script for smoother animations -->
  <script>
    const roles = ["Product Designer ", "Design Engineer ", "Rapid Builder "];
    let currentIndex = 0;
    const roleElement = document.getElementById("changing-role");
    
    // Smoother typing speed variables
    const typingSpeedBase = 90; // slightly slower base typing
    const typingVariation = 20; // less variation for smoother feel
    const deletingSpeedBase = 50; // slightly slower deleting
    const deletingVariation = 10; // less variation for smoother feel
    const delayAfterTyping = 3000; // pause when fully typed
    
    let isDeleting = false;
    let text = '';
    let charIndex = 0;
    
    function getRandomSpeed(base: number, variation: number): number {
      return Math.floor(base + Math.random() * variation - variation/2);
    }
  
  function typeEffect() {
    const currentRole = roles[currentIndex];
    
    if (!isDeleting) {
      // Typing
      text = currentRole.substring(0, charIndex + 1);
      charIndex++;
      
      // If we've typed the full word
      if (charIndex === currentRole.length) {
        isDeleting = true;
        setTimeout(typeEffect, delayAfterTyping);
        return;
      }
    } else {
      // Deleting
      text = currentRole.substring(0, charIndex - 1);
      charIndex--;
      
      // If we've deleted the full word
      if (charIndex === 0) {
        isDeleting = false;
        currentIndex = (currentIndex + 1) % roles.length;
      }
    }
    
    if (roleElement) {
      roleElement.textContent = text;
      const cursor = document.createElement('span');
      cursor.className = 'cursor';
      cursor.textContent = '|';
      roleElement.appendChild(cursor);
    }
    
    // Get a slightly random speed for more natural typing
    const speed = isDeleting 
      ? getRandomSpeed(deletingSpeedBase, deletingVariation) 
      : getRandomSpeed(typingSpeedBase, typingVariation);
      
    setTimeout(typeEffect, speed);
  }
  
  // Start the typing effect when the page loads
  document.addEventListener("DOMContentLoaded", () => {
    if (roleElement) {
      // Add CSS for the blinking cursor with purple color
      const style = document.createElement('style');
      style.textContent = `
        @keyframes blink {
          0%, 100% { opacity: 1; }
          50% { opacity: 0; }
        }
        .cursor {
          animation: blink 0.8s infinite;
          font-weight: bold;
          color: #8b5cf6; /* Purple color - adjust to match your site's purple */
        }
      `;
      document.head.appendChild(style);
      
      // Start the typing effect
      setTimeout(typeEffect, 500);
    }
  });
</script>

</Layout>